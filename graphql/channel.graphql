extend type Query {
    channels
    (
        user: Int @where(key: "user_id")
        category: Int @where(key: "category_id")
    )

    : [Channel!]! @all

    channel (id: Int
    @eq) : Channel! @find

    followedChannels: [Channel!]! @guard
    myChannels: [Channel!]! @guard
}

type Channel @model(class: "Modules\\PodcastApp\\Models\\Channel") {
    id: ID!
    title: String!
    description: String
    user: User @belongsTo
    seasons: [Season] @hasMany
    episodes: [Episode] @hasManyThrough
    likes: [Like] @morphMany
    comments: [Comment] @morphMany
    status: Int!
    cover: String!
    allow_comment: Boolean!
    episodes_count: Int @count(relation: "episodes")
    seasons_count: Int @count(relation: "seasons")
    likes_count: Int @count(relation: "likes")
    comments_count: Int @count(relation: "comments")
    follows_count: Int @count(relation: "follows")
    isFollowed: Boolean @method(name: "isFollowed")
    listensCount: Int @method(name: "listensCount") @cache(maxAge: 6000)
    totalDuration: Int @method(name: "totalDuration") @cache(maxAge: 6000)

    jalali_created_at : String @method(name: "jalaliCreatedAt")
    created_at : DateTime!

}
