extend type Query {

    #//FETCH ALL CHANNELS
    episodes
    : [Episode!]! @all

    likeEpisodes : [Episode]! @guard #//FETCH EPISODES THAT AUTH LIKED THEM

    #//FETCH EPISODES THAT AUTH LISTENED THEM
    listenedEpisodes : [Episode]! @guard
}

type Episode @model(class: "Modules\\PodcastApp\\Models\\Episode") {
    id: ID!
    title: String!
    description: String
    cover: String!
    season: Season! @belongsTo
    channel : Channel @method(name: "channel")
    likes: [Like] @morphMany
    comments: [Comment] @morphMany
    allow_comment: Boolean!
    allow_share: Boolean!
    status: Int!
    file: EpisodeFile @hasOne
    likes_count: Int @count(relation: "likes")
    isLiked: Boolean @method(name: "isLiked")
    comments_count: Int @count(relation: "comments")
    listens_count: Int @count(relation: "listens") @cache(maxAge: 6000)
    userListenedSecond: Int @method(name: "userListenedSecond")
    tags: [Tag]! @belongsToMany
    publish_at : DateTime!
    published_at : DateTime!
    created_at : DateTime!

    jalali_publish_at : String @method(name: "jalaliPublishAt")
    jalali_published_at : String @method(name: "jalaliPublishedAt")


}
